{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","id","href","type","onClick","title","Fragment","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"yKAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBAEEF,UACEF,IAAkBI,EAAIC,GAClB,YACA,GALR,SAQE,mBACEC,KAAK,IACLC,KAAK,SACLC,QAAS,WACHR,IAAkBI,EAAIC,IAI1BJ,EAAcG,IARlB,SAWGA,EAAIK,SAlBFL,EAAIC,WAwBhBN,EAAKI,KAAI,SAAAC,GAAG,OACX,cAAC,IAAMM,SAAP,UACGN,EAAIC,KAAOL,GACT,mBAAG,UAAQ,cAAX,SAA0BI,EAAIO,WAFdP,EAAIC,WCxCpBN,EAAc,CACzB,CAAEM,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,gBAmB3BC,EAhBO,WACpB,MAAsCC,mBAASd,EAAK,IAApD,mBAAOe,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKb,UAAU,gBAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0CY,EAAYL,SAEtD,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAec,EAAYT,GAC3BJ,cAAec,QCnBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a3df0689.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Tab } from './react-app-env';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={\n                selectedTabId === tab.id\n                  ? 'is-active'\n                  : ''\n              }\n            >\n              <a\n                href=\"#\"\n                type=\"button\"\n                onClick={() => {\n                  if (selectedTabId === tab.id) {\n                    return;\n                  }\n\n                  onTabSelected(tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {tabs.map(tab => (\n        <React.Fragment key={tab.id}>\n          {tab.id === selectedTabId\n          && <p data-cy=\"tab-content\">{tab.content}</p>}\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { Tab } from './react-app-env';\nimport { Tabs } from './Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"App container\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTab.title}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}