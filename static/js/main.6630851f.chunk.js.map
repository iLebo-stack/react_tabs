{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","classnames","id","href","type","onClick","title","find","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"sMAWaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWG,IAAW,CAAE,YAAaL,IAAkBI,EAAIE,KAF7D,SAIE,mBACEC,KAAK,IACLC,KAAK,SACLC,QAAS,WACHT,IAAkBI,EAAIE,IAI1BL,EAAcG,IARlB,SAWGA,EAAIM,SAdFN,EAAIE,WAoBjB,mBAAG,UAAQ,cAAX,mBACGP,EAAKY,MAAK,SAAAP,GAAG,OAAIA,EAAIE,KAAON,YAD/B,aACG,EAA4CY,cCrCxCb,EAAc,CACzB,CAAEO,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,gBAmB3BC,EAhBO,WACpB,MAAsCC,mBAASf,EAAK,IAApD,mBAAOgB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKd,UAAU,gBAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0Ca,EAAYL,SAEtD,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAee,EAAYT,GAC3BL,cAAee,QCnBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6630851f.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Tab } from './react-app-env';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classnames({ 'is-active': selectedTabId === tab.id })}\n            >\n              <a\n                href=\"#\"\n                type=\"button\"\n                onClick={() => {\n                  if (selectedTabId === tab.id) {\n                    return;\n                  }\n\n                  onTabSelected(tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <p data-cy=\"tab-content\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </p>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { Tab } from './react-app-env';\nimport { Tabs } from './Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"App container\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTab.title}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}